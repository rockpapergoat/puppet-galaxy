#
# Galaxy is configured by default to be useable in a single-user development
# environment.  To tune the application for a multi-user production
# environment, see the documentation at:
#
# http://wiki.g2.bx.psu.edu/Admin/Config/Performance/Production%20Server
#

# Throughout this sample configuration file, except where stated otherwise,
# uncommented values override the default if left unset, whereas commented
# values are set to the default value.
# Examples of many of these options are explained in more detail in the wiki:
#
# http://wiki.g2.bx.psu.edu/Admin/Config
#
# Config hackers are encouraged to check there before asking for help.

# ---- HTTP Server ----------------------------------------------------------

# Configuration of the internal HTTP server.
#	
<%if @wk_config%>
<% for i in @number_of_web_workers_array do %>
[server:web<%= i %>]
use=egg:Paste#http
port=<%= @webworker_starting_port_number.to_i + i %>
host=<%= @webworker_host_to_listen_on %>
use_threadpool=true
threadpool_workers=<%= @webworker_threadpool_workers %>

<% end %>

<% for i in @number_of_background_workers_array do %>
[server:handler<%= i %>]
use=egg:Paste#http
port=<%= @handler_starting_port_number.to_i + i %>
host=<%= @handler_host_to_listen_on %>
use_threadpool=true
threadpool_workers=<%= @handler_threadpool_workers %>
<% end %>

<%else%>
[server:main]
# The internal HTTP server to use.  Currently only Paste is provided.  This
#	option is required.
use = egg:Paste#http	
# The port on which to listen.
#port = 8080
#	
# The address on which to listen.  By default, only listen to localhost (Galaxy
# will not be accessible over the network).  Use '0.0.0.0' to listen on all
# available network interfaces.
host = <%= @main_host %>
#	
#	Use a threadpool for the web server instead of creating a thread for each
#	request.
use_threadpool = True
#	
#	Number of threads in the web server thread pool.
#threadpool_workers = 10
#	
#	Set the number of seconds a thread can work before you should kill it (assuming it will never finish) to 3 hours.
threadpool_kill_thread_limit = 10800
<% end  %>

# ---- Filters --------------------------------------------------------------
# Filters sit between Galaxy and the HTTP server.
# These filters are disabled by default.  They can be enabled with
# 'filter-with' in the [app:main] section below.

# Define the gzip filter.
[filter:gzip]
use = egg:Paste#gzip

# Define the proxy-prefix filter.
[filter:proxy-prefix]
use = egg:PasteDeploy#prefix
<% if @use_prefix %>
prefix = <%= @proxy_prefix %>
<% end %>

# ---- Galaxy ---------------------------------------------------------------

# Configuration of the Galaxy application.

[app:main]

# Filtering

<% Array(@filters).each do |filter| %>
<%= filter['type'] %> = <% filter['python_class'] %>
<% end  %>

# -- Application and filtering

# The factory for the WSGI application.  This should not be changed.
paste.app_factory = galaxy.web.buildapp:app_factory

<% if @use_prefix %>
filter-with = proxy-prefix

# If proxy-prefix is enabled and you're running more than one Galaxy instance
# behind one hostname, you will want to set this to the same path as the prefix
# in the filter above.  This value becomes the "path" attribute set in the
# cookie so the cookies from each instance will not clobber each other.
cookie_path = <%= @proxy_prefix %>
<% end %>

# -- Database

# By default, Galaxy uses a SQLite database at 'database/universe.sqlite'.  You
# may use a SQLAlchemy connection string to specify an external database
# instead.  This string takes many options which are explained in detail in the
# config file documentation.
#database_connection = sqlite:///./database/universe.sqlite?isolation_level=IMMEDIATE

# If the server logs errors about not having enough database pool connections,
# you will want to increase these values, or consider running more Galaxy
# processes.
#database_engine_option_pool_size = 5
#database_engine_option_max_overflow = 10

# If using MySQL and the server logs the error "MySQL server has gone away",
# you will want to set this to some positive value (7200 should work).
#database_engine_option_pool_recycle = -1

# If large database query results are causing memory or response time issues in
# the Galaxy process, leave the result on the server instead.  This option is
# only available for PostgreSQL and is highly recommended.
#database_engine_option_server_side_cursors = False

# Create only one connection to the database per thread, to reduce the
# connection overhead.  Recommended when not using SQLite:
#database_engine_option_strategy = threadlocal

# Log all database transactions, can be useful for debugging and performance
# profiling.  Logging is done via Python's 'logging' module under the qualname
# 'galaxy.model.orm.logging_connection_proxy'
#database_query_profiling_proxy = False

database_connection=<%= @db_connection%>

<% if !@db_driver.eql?"sqlite" %>
database_engine_option_pool_size = <%= @db_opts_pool_size%>
database_engine_option_max_overflow = <%= @db_opts_max_overflow%>
	<% if @db_driver.eql?"mysql" %>
# If using MySQL and the server logs the error "MySQL server has gone away",
# you will want to set this to some positive value (7200 should work).
database_engine_option_pool_recycle = -1
	<% end %>
	<% if @db_driver.eql?"postgresql" %>
# If large database query results are causing memory or response time issues in
# the Galaxy process, leave the result on the server instead.  This option is
# only available for PostgreSQL and is highly recommended.
database_engine_option_server_side_cursors = True
	<% end %>
# Create only one connection to the database per thread, to reduce the
# connection overhead.  Recommended when not using SQLite:
database_engine_option_strategy = threadlocal
<% end %>

# Log all database transactions, can be useful for debugging and performance
# profiling.  Logging is done via Python's 'logging' module under the qualname
# 'galaxy.model.orm.logging_connection_proxy'
<% if @database_query_profiling_proxy %>
database_query_profiling_proxy = True
<% else %>
database_query_profiling_proxy = False
<% end %>

# -- Files and directories

# Path where genome builds are stored. This defaults to tool-data/genome
#genome_data_path = tool-data/genome

# URL for rsync server to download pre-built indexes.
#rsync_url = rsync://scofield.bx.psu.edu/indexes

# Dataset files are stored in this directory.
file_path = <%= @file_path%>

# Temporary files are stored in this directory.
new_file_path = <%= @tmp_file_dir %>

# Tool config files, defines what tools are available in Galaxy.
# Tools can be locally developed or installed from Galaxy tool sheds.
tool_config_file = <%= Array(@tool_config_files).join(",") %>

# Default path to the directory containing the tools defined in tool_conf.xml.
# Other tool config files must include the tool_path as an attribute in the <toolbox> tag.
#tool_path = tools

# Path to the directory in which managed tool dependencies are placed.  To use
# the dependency system, see the documentation at:
# http://wiki.g2.bx.psu.edu/Admin/Config/Tool%20Dependencies
tool_dependency_dir = <%= @tool_dependency_dir %>

# Enable automatic polling of relative tool sheds to see if any updates
# are available for installed repositories.  Ideally only one Galaxy
# server process should be able to check for repository updates.  The
# setting for hours_between_check should be an integer between 1 and 24.
#enable_tool_shed_check = False
#hours_between_check = 12

# XML config file that contains data table entries for the ToolDataTableManager. This file is manually
# maintained by the Galaxy administrator.
#tool_data_table_config_path = tool_data_table_conf.xml

# XML config file that contains additional data table entries for the ToolDataTableManager.  This file
# is automatically generated based on the current installed tool shed repositories that contain valid
# tool_data_table_conf.xml.sample files.  At the time of installation, these entries are automatically
# added to the following file, which is parsed and applied to the ToolDataTableManager at server start up.
#shed_tool_data_table_config = shed_tool_data_table_conf.xml

# Directory where data used by tools is located, see the samples in that
# directory and the wiki for help:
# http://wiki.g2.bx.psu.edu/Admin/Data%20Integration
#tool_data_path = tool-data

# Directory where chrom len files are kept, currently mainly used by trackster
#len_file_path = tool-data/shared/ucsc/chrom

# Datatypes config file, defines what data (file) types are available in
# Galaxy.
#datatypes_config_file = datatypes_conf.xml

# Visualizations config directory, where to look for individual visualization
# xml configuration files. Those files define how visualizations apply to
# particular data and how to pass them the necessary parameters
visualizations_config_directory = config/visualizations

# Each job is given a unique empty directory as its current working directory.
# This option defines in what parent directory those directories will be
# created.
job_working_directory = <%= @job_working_dir %>

# If using a cluster, Galaxy will write job scripts and stdout/stderr to this
# directory.
cluster_files_directory = <%= @cluster_files_dir %>

# External service types config file, defines what types of external_services configurations
# are available in Galaxy.
#external_service_type_config_file = external_service_types_conf.xml

# Path to the directory containing the external_service_types defined in the config.
#external_service_type_path = external_service_types

# Tools with a number of outputs not known until runtime can write these
# outputs to a directory for collection by Galaxy when the job is done.
# Previously, this directory was new_file_path, but using one global directory
# can cause performance problems, so using job_working_directory ('.' or cwd
# when a job is run) is encouraged.  By default, both are checked to avoid
# breaking existing tools.
#collect_outputs_from = new_file_path,job_working_directory



<% if @smtp_server %>
# -- Mail and notification

# Galaxy sends mail for various things: Subscribing users to the mailing list
# if they request it, emailing password resets, notification from the Galaxy
# Sample Tracking system, and reporting dataset errors.  To do this, it needs
# to send mail through an SMTP server, which you may define here (host:port).
# Galaxy will automatically try STARTTLS but will continue upon failure.
smtp_server = <%= @smtp_server %>

# If your SMTP server requires a username and password, you can provide them
# here (password in cleartext here, but if your server supports STARTTLS it
# will be sent over the network encrypted).
<% if @smtp_username %>
smtp_username = <%= @smtp_username %>
<% end %>
<% if @smtp_password %>
smtp_password = <%= @smtp_password %>
<% end %>

<% end %>
# On the user registration form, users may choose to join the mailing list.
# This is the address of the list they'll be subscribed to.
#mailing_join_addr = galaxy-announce-join@bx.psu.edu

error_email_to = <% @admin_email %>

# -- Display sites
# Galaxy can display data at various external browsers.  These options specify
# which browsers should be available.  URLs and builds available at these
# browsers are defined in the specifield files.

# UCSC browsers: tool-data/shared/ucsc/ucsc_build_sites.txt
#ucsc_display_sites = main,test,archaea,ucla

# GBrowse servers: tool-data/shared/gbrowse/gbrowse_build_sites.txt
#gbrowse_display_sites = modencode,sgd_yeast,tair,wormbase,wormbase_ws120,wormbase_ws140,wormbase_ws170,wormbase_ws180,wormbase_ws190,wormbase_ws200,wormbase_ws204,wormbase_ws210,wormbase_ws220,wormbase_ws225

# GeneTrack servers: tool-data/shared/genetrack/genetrack_sites.txt
#genetrack_display_sites = main,test

# If use_remote_user = True, display application servers will be denied access
# to Galaxy and so displaying datasets in these sites will fail.
# display_servers contains a list of hostnames which should be allowed to
# bypass security to display datasets.  Please be aware that there are security
# implications if this is allowed.  More details (including required changes to
# the proxy server config) are available in the Apache proxy documentation on
# the wiki.
#
# The list of servers in this sample config are for the UCSC Main, Test and
# Archaea browsers, but the default if left commented is to not allow any
# display sites to bypass security (you must uncomment the line below to allow
# them).
#display_servers = hgw1.cse.ucsc.edu,hgw2.cse.ucsc.edu,hgw3.cse.ucsc.edu,hgw4.cse.ucsc.edu,hgw5.cse.ucsc.edu,hgw6.cse.ucsc.edu,hgw7.cse.ucsc.edu,hgw8.cse.ucsc.edu,lowepub.cse.ucsc.edu

# To disable the old-style display applications that are hardcoded into datatype classes,
# set enable_old_display_applications = False.
# This may be desirable due to using the new-style, XML-defined, display applications that
# have been defined for many of the datatypes that have the old-style.
# There is also a potential security concern with the old-style applications,
# where a malicious party could provide a link that appears to reference the Galaxy server,
# but contains a redirect to a third-party server, tricking a Galaxy user to access said
# site.
#enable_old_display_applications = True

# -- Next gen LIMS interface on top of existing Galaxy Sample/Request management code.

use_nglims = False
nglims_config_file = tool-data/nglims.yaml

# -- UI Localization

# Show a message box under the masthead.
#message_box_visible = False
#message_box_content = None
#message_box_class = info

<% if @ui_branding %>
brand = <%= @branding %>
<% end %>

<% if @ui_welcome_url %>
welcome_url = <%= @ui_welcome_url %>
<% end %>
<% if @ui_logo_url %>
logo_url = <%= @ui_logo_url %>
<% end %>

<% if @ui_extra_wiki_url %>
wiki_url = <%= @ui_extra_wiki_url %>
<% end %>
<% if @ui_extra_support_url %>
support_url = <%= @ui_extra_support_url %>
<% end %>
<% if @ui_extra_citation_url %>
citation_url = <%= @ui_extra_citation_url %>
<% end %>
<% if @ui_extra_terms_url %>
terms_url = <%= @ui_extra_terms_url %>
<% end %>

# Serve static content, which must be enabled if you're not serving it via a
# proxy server.  These options should be self explanatory and so are not
# documented individually.  You can use these paths (or ones in the proxy
# server) to point to your own styles.
static_enabled = True
static_cache_time = 360
static_dir = %(here)s/static/
static_images_dir = %(here)s/static/images
static_favicon_dir = %(here)s/static/favicon.ico
static_scripts_dir = %(here)s/static/scripts/
static_style_dir = %(here)s/static/june_2007_style/blue
static_robots_txt = %(here)s/static/robots.txt

# Pack javascript at launch (/static/scripts/*.js)
# This only happens if the modified timestamp of the source .js is newer
# than the version (if it exists) in /static/scripts/packed/
# Note that this requires java > 1.4 for executing yuicompressor.jar
#pack_scripts = False

<% if @cloud_enable_launch %>
enable_cloud_launch = True
cloudlaunch_default_ami = <%= @cloud_ami %>
<% end %>
<%#
# -- Advanced proxy features

# For help on configuring the Advanced proxy features, see:
# http://usegalaxy.org/production
%>
<% if @webserver.eql?"apache" %>
  <% if @xsendfile %>
apache_xsendfile = True
  <% end %>
<% else if @webserver.eql?"nginx" %>
  <% if @x_accel_redirect %>
nginx_x_accel_redirect_base = True
  <% end %>
  <% if @x_archive_files %>
nginx_x_archive_files_base = True
  <% end %>
  <% if @nginx_upload_store %>
#nginx_upload_store = True
  <% end %>
  <% if @nginx_upload_path %>
#nginx_upload_path = True
  <% end %>
<% end %>
<% end %>

<% if @upstream_gzip %>
upstream_gzip = true
<% end %>


# -- Logging and Debugging

log_level = <%= @log_level %>
<% if @database_engine_option_echo %>
database_engine_option_echo = True
<% end %>
<% if @database_engine_option_echo_pool %>
database_engine_option_echo_pool = True
<% end %>
<% if @log_events  %>
log_events = True
<% end %>
<% if @log_actions %>
log_actions = True
<% end %>
<% if @sanitize_all_html %>
sanitize_all_html = True
<% end %>
<% if @debug_enable %>
debug = True
<% end %>
<% if  @debug_wsgi_lint %>
use_lint = True
<% end %>
<% if @debug_use_profile  %>
use_profile = True
<% end %>
<% if  @debug_use_printdebug %>
use_printdebug = True
<% end %>
<% if @debug_use_interactive  %>
use_interactive = True
<% end %>
<% if @debug_use_heartbeat %>
use_heartbeat = True
<% end %>
<% if @debug_use_memdump %>
use_memdump = True
<% end %>
<%#
# -- Data Libraries

# These library upload options are described in much more detail in the wiki:
# http://wiki.g2.bx.psu.edu/Admin/Data%20Libraries/Uploading%20Library%20Files
%>
<% if !@library_import_dir.eql?"None" %>
library_import_dir = <% @library_import_dir %>
<% end %>
<% if !@user_library_import_dir.eql?"None" %>
user_library_import_dir = <% @user_library_import_dir %>
<% end %>
<% if @allow_library_path_paste %>
allow_library_path_paste = True
<% end %>

<% if @disable_library_comptypes.size > 0 %>
disable_library_comptypes = <%= Array(@disable_library_comptypes).join(",") %>
<% end %>

<% if @use_transfer_manager %>
transfer_manager_port = <% @transfer_manager_port %>
<% end %>
<% if @data_search_with_whoosh %>
enable_whoosh_library_search = True
whoosh_index_dir = <%= @whoosh_index_dir %>
<% end %>
<% if @data_search_with_lucene %>
enable_lucene_library_search = True
fulltext_max_size = <%= @lucene_fulltext_max_size %>
fulltext_noindex_filetypes=<%= Array(@lucene_fulltext_noindex_filetypes).join(",") %>
fulltext_url = <%= @lucene_fulltext_url %>
<% end %>
# -- Users and Security

id_secret = <%= @id_secret %>

<% if @use_remote_user %>
use_remote_user = True
remote_user_maildomain = <%= @remote_user_maildomain %>
remote_user_logout_href = <%= @remote_user_logout_href %>
<% end %>

<% unless @admin_users.empty? %>
admin_users = <%= Array(@admin_users).join(",") %>
<% end %>
<% if @require_login %>
require_login = True
<% end %>
<% if @allow_user_creation %>
allow_user_creation = True
<% end %>
<% if @allow_user_deletion %>
allow_user_deletion = True
<% end %>
<% if @allow_user_impersonation %>
allow_user_impersonation = True
<% end %>
<% if @allow_user_dataset_purge %>
allow_user_dataset_purge = True
<% end %>
<% if @new_user_dataset_access_role_default_private %>
new_user_dataset_access_role_default_private = True
<% end %>

# -- beta features

# object store mode (valid options are: disk, s3, swift, distributed, hierarchical)
#object_store = disk
#os_access_key = <your cloud object store access key>
#os_secret_key = <your cloud object store secret key>
#os_bucket_name = <name of an existing object store bucket or container>
# if using 'swift' object store, you must specify the following connection properties
#os_host = swift.rc.nectar.org.au
#os_port = 8888
#os_is_secure = false
#os_conn_path = /
# reduced redundancy can be used only with the 's3' object store
#os_use_reduced_redundancy = false
# size (in gb) that the cache used by object store should be limited to.
# if the value is not specified, the cache size will be limited only by the
# file system size. the file system location of the cache is considered the
# configuration of the ``file_path`` directive defined above.
#object_store_cache_size = 100

# configuration file for the distributed object store, if object_store =
# distributed.  see the sample at distributed_object_store_conf.xml.sample
#distributed_object_store_config_file = none

# enable galaxy to communicate directly with a sequencer
#enable_sequencer_communication = false

<% if @enable_openid %>
enable_openid = True
openid_config_file = <%= @openid_config_file %>
<% end %>
<% if @allow_user_impersonation and not @admin_users.empty? %>
# optional list of email addresses of api users who can make calls on behalf of
# other users
api_allow_run_as = <%= Array(@admin_users).join(",") %>
<% end %>

# enable tool tags (associating tools with tags).  this has its own option
# since its implementation has a few performance implications on startup for
# large servers.
#enable_tool_tags = false

# enable a feature when running workflows. when enabled, default datasets
# are selected for "set at runtime" inputs from the history such that the
# same input will not be selected twice, unless there are more inputs than
# compatible datasets in the history.
# when false, the most recently added compatible item in the history will
# be used for each "set at runtime" input, independent of others in the workflow
#enable_unique_workflow_defaults = false

# the url to the myexperiment instance being used (omit scheme but include port)
#myexperiment_url = www.myexperiment.org:80

<% if @enable_ftp_upload %>
ftp_upload_dir = <%= @ftp_upload_dir %>
ftp_upload_site = <%= @ftp_upload_site %>
<% end %>
<% if @enable_quotas %>
enable_quotas = True
<% end %>

# enable a feature when running workflows. when enabled, default datasets
# are selected for "set at runtime" inputs from the history such that the
# same input will not be selected twice, unless there are more inputs than
# compatible datasets in the history.
# when false, the most recently added compatible item in the history will
# be used for each "set at runtime" input, independent of others in the workflow
#enable_unique_workflow_defaults = false

# this option allows users to see the full path of datasets via the "view
# details" option in the history.  administrators can always see this.
#expose_dataset_path = false

# data manager configuration options
# allow non-admin users to view available data manager options
#enable_data_manager_user_view = false
# file where data managers are configured
#data_manager_config_file = data_manager_conf.xml
# file where tool shed based data managers are configured 
#shed_data_manager_config_file = shed_data_manager_conf.xml
# directory to store data manager based tool-data; defaults to tool_data_path
#galaxy_data_manager_data_path = tool-data

# -- job execution
# to increase performance of job execution and the web interface, you can
# separate galaxy into multiple processes.  there are more than one way to do
# this, and they are explained in detail in the documentation:
#
#   http://wiki.g2.bx.psu.edu/admin/config/performance/web%20application%20scaling
#
# by default, galaxy manages and executes jobs from within a single process and
# notifies itself of new jobs via in-memory queues.  jobs are run locally on
# the system on which galaxy is started.  advanced job running capabilities can
# be configured through the job configuration file.
#job_config_file = <%= @job_config_file %>

<% if @number_of_background_workers.size+@number_of_web_workers.size > 2 %>
# in multiprocess configurations, notification between processes about new jobs
# is done via the database.  in single process configurations, this is done in
# memory, which is a bit quicker.  galaxy tries to automatically determine
# which method it should used based on your handler configuration in the job
# config file, but you can explicitly override this behavior by setting the
# following option to true or false.
track_jobs_in_database = True
<% else %>
track_jobs_in_database = False
<% end %>

# this enables splitting of jobs into tasks, if specified by the particular tool config.
# this is a new feature and not recommended for production servers yet.
#use_tasked_jobs = false
#local_task_queue_workers = 2

<% if @enable_job_recovery %>
enable_job_recovery = True
<% end %>

<% if @retry_metadata_internally %>
retry_metadata_internally = True
<% else %>
retry_metadata_internally = False
<% end %>

<% if @outputs_to_working_directory %>
outputs_to_working_directory = True
<% end %>

<% if Integer(@retry_job_output_collection) > 0 %>
retry_job_output_collection = <%= @retry_job_output_collection %>
<% end %>

cleanup_job = <%= @cleanup_job %>

<% if !@environment_setup_file.eql?"None" %>
environment_setup_file = <%= @environment_setup_file %>
<% end %>

<% if @cache_user_job_count %>
cache_user_job_count = True
<% end %>
# ---- Galaxy Message Queue -------------------------------------------------

[galaxy_amqp]
<% if @use_amqp_server %>
host = <%= @amqp_host %>
port = <%= @amqp_port %>
userid = <%= @amqp_userid %>
password = <%= @amqp_password %>
virtual_host = <%= @amqp_virtual_host %>
queue = <%= @amqp_queue %>
exchange = <%= @amqp_exchange %>
routing_key = <%= @amqp_routing_key %>
ctl_path = <%= @amqp_ctl_path %>
<% end %>
